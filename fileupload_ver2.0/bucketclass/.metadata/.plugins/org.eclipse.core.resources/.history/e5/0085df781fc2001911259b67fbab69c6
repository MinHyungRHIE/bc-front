package com.pap.bucketclass.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.springframework.security.core.userdetails.User;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "role")
public class Role implements Serializable {
	
	@Id
	@Column(name = "role_id")
	private String roleId;
	
	@Column(name = "role_name", nullable = false)
	private String roleName;
	
	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(
			name = "role_privilege",
			joinColumns = @JoinColumn(name = "role_id"),
			inverseJoinColumns = @JoinColumn(name = "privilege_id")
			)
	private Set<Privilege> privileges = new HashSet<>();
	
	@JsonIgnore
    @ManyToMany(mappedBy = "roles")
    @LazyCollection(LazyCollectionOption.EXTRA)
    private Set<User> users = new HashSet<>();
}
